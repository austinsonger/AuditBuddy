# [main.py]
import sys
import os
from datetime import datetime, timedelta

# Adjust the Python path to include the parent directory of aws
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from _config.config import environments, current_year, current_date
from _config.command_runner import CommandRunner
from _config.aws_handler import AWSHandler

"""
This script collects logs for vulnerability trend analysis from the vulnerability scanning mechanism.

It retrieves Amazon Inspector findings to analyze trends in vulnerabilities over the past 365 days. The logs are pulled from the past year and saved as JSON files in the specified evidence artifacts directory.
"""

def get_time_range():
    end_time = datetime.utcnow()
    start_time = end_time - timedelta(days=365)
    return start_time.strftime('%Y-%m-%dT%H:%M:%S'), end_time.strftime('%Y-%m-%dT%H:%M:%S')

def main():
    command_runner = CommandRunner()
    start_time, end_time = get_time_range()

    for env_name, config in environments.items():
        config.set_aws_credentials()  # Set AWS credentials

        aws_handler = AWSHandler(env_name, config)

        # Generate the output file path
        vulnerability_trend_output_file = f"/evidence-artifacts/{current_year}/{env_name}/{current_date}.vulnerability_trend_analysis.json"

        # Define the AWS CLI command with output file path
        # Collect Amazon Inspector findings for vulnerability trend analysis
        vulnerability_trend_command = [
            'aws', 'inspector', 'list-findings',
            '--start-time', start_time, '--end-time', end_time,
            '--region', config.region, '--output', 'json'
        ]

        # Collect evidence
        aws_handler.collect_evidence(command_runner, vulnerability_trend_command, vulnerability_trend_output_file)

if __name__ == "__main__":
    main()
