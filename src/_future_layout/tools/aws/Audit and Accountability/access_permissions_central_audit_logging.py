import sys
import os
import json

# Adjust the Python path to include the parent directory of aws
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from _config.config import environments, current_year, current_date
from _config.command_runner import CommandRunner
from _config.aws_handler import AWSHandler

def main():
    """
    Evidence Description:
    This script collects evidence of access permissions within the centralized audit logging mechanism for:
     - Access to audit information generated by the tool
     - Access to the mechanism itself
     - Access permissions to the management functionality of the centralized auditing mechanism
     - Access for personnel allowed to make changes to the auditable events configured within the centralized audit logging mechanism

    Controls:
    - NIST 800-53 Requirement ID: AU-9 (Protection of Audit Information), AC-6 (Least Privilege)
    - SOC 2 Control Number: CC6.1 (Logical and Physical Access Controls), CC6.2 (System Component Identification)
    """
    command_runner = CommandRunner()

    for env_name, config in environments.items():
        config.set_aws_credentials()  # Set AWS credentials

        aws_handler = AWSHandler(env_name, config)

        # Generate the output file path for IAM policies related to CloudTrail access
        output_file_iam_policies = f"/evidence-artifacts/{current_year}/{env_name}/{current_date}.iam_policies_audit_logging.json"

        # Define the AWS CLI command for listing IAM policies
        aws_command_iam_policies = [
            'aws', 'iam', 'list-policies', '--output', 'json'
        ]

        # Collect evidence for IAM policies
        iam_policies = aws_handler.collect_evidence(command_runner, aws_command_iam_policies, output_file_iam_policies, return_data=True)
        for policy in iam_policies['Policies']:
            policy_arn = policy['Arn']
            output_file_iam_policy_version = f"/evidence-artifacts/{current_year}/{env_name}/{current_date}.iam_policy_{policy_arn}_version.json"
            aws_command_iam_policy_version = [
                'aws', 'iam', 'get-policy-version', '--policy-arn', policy_arn, '--version-id', policy['DefaultVersionId'], '--output', 'json'
            ]
            aws_handler.collect_evidence(command_runner, aws_command_iam_policy_version, output_file_iam_policy_version)

        # Generate the output file path for IAM roles related to CloudTrail access
        output_file_iam_roles = f"/evidence-artifacts/{current_year}/{env_name}/{current_date}.iam_roles_audit_logging.json"

        # Define the AWS CLI command for listing IAM roles
        aws_command_iam_roles = [
            'aws', 'iam', 'list-roles', '--output', 'json'
        ]

        # Collect evidence for IAM roles
        iam_roles = aws_handler.collect_evidence(command_runner, aws_command_iam_roles, output_file_iam_roles, return_data=True)
        for role in iam_roles['Roles']:
            role_name = role['RoleName']
            output_file_iam_role_policies = f"/evidence-artifacts/{current_year}/{env_name}/{current_date}.iam_role_{role_name}_policies.json"
            aws_command_iam_role_policies = [
                'aws', 'iam', 'list-role-policies', '--role-name', role_name, '--output', 'json'
            ]
            aws_handler.collect_evidence(command_runner, aws_command_iam_role_policies, output_file_iam_role_policies)

        # Generate the output file path for CloudTrail trails
        output_file_cloudtrail = f"/evidence-artifacts/{current_year}/{env_name}/{current_date}.cloudtrail_trails.json"

        # Define the AWS CLI command for describing CloudTrail trails
        aws_command_cloudtrail = [
            'aws', 'cloudtrail', 'describe-trails', '--region', config.region, '--output', 'json'
        ]

        # Collect evidence for CloudTrail trails
        aws_handler.collect_evidence(command_runner, aws_command_cloudtrail, output_file_cloudtrail)

        # Generate the output file path for CloudTrail event selectors
        output_file_cloudtrail_event_selectors = f"/evidence-artifacts/{current_year}/{env_name}/{current_date}.cloudtrail_event_selectors.json"

        # Define the AWS CLI command for describing CloudTrail event selectors
        aws_command_cloudtrail_event_selectors = [
            'aws', 'cloudtrail', 'get-event-selectors', '--region', config.region, '--output', 'json'
        ]

        # Collect evidence for CloudTrail event selectors
        aws_handler.collect_evidence(command_runner, aws_command_cloudtrail_event_selectors, output_file_cloudtrail_event_selectors)

if __name__ == "__main__":
    main()
